{"version":3,"sources":["components/ImageSelector.js","components/OverallWeather.js","components/SimpifiedTodayWeather.js","components/AdvancedTodayWeather.js","components/WeatherOnNextDays.js","components/Footer.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["ImageSelector","props","statelessImages","dayImages","nightImages","react_default","a","createElement","src","weather","id","hour","Date","getHours","selectWeather","weatherId","alt","OverallWeather","currentWeather","detailedWeather","location","className","name","Math","round","main","temp","components_ImageSelector","daily","max","min","SimplifiedTodayWeather","morn","day","eve","night","AdvancedWeather","time","unix","date","concat","getMinutes","sys","sunrise","sunset","uvi","wind_speed","pressure","clouds","humidity","visibility","WeatherOnNextDays","countDate","month","toString","getDate","dt","Footer","href","Container","_useState","useState","_useState2","Object","slicedToArray","place","setPlace","_useState3","_useState4","setCurrentWeather","_useState5","_useState6","setDetailedWeather","_useState7","_useState8","loading","setLoading","useEffect","fetch","then","result","json","latitude","longitude","region_name","country_name","country_code","catch","err","console","log","length","Fragment","components_OverallWeather","SimpifiedTodayWeather","components_AdvancedTodayWeather","components_WeatherOnNextDays","components_Footer","App","components_Container","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2b3057b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageSelector = (props) => {\r\n    const statelessImages = ['../images/stateless/00-cloud.png', '../images/stateless/01-rain.png', '../images/stateless/02-storm.png', '../images/stateless/03-snow.png', '../images/stateless/04-fog.png', '../images/stateless/05-wind.png', '../images/stateless/06-cloudy.png', '../images/stateless/000-rain.png', '../images/stateless/001-thunder.png', '../images/stateless/002-tornado.png', '../images/stateless/003-wind.png'];\r\n    const dayImages = ['../images/day/00-day-clear.png', '../images/day/01-day-cloud.png', '../images/day/02-day-rain.png', '../images/day/03-day-storm.png', '../images/day/04-day-snow.png'];\r\n    const nightImages = ['../images/night/00-night-clear.png', '../images/night/01-night-cloud.png', '../images/night/02-night-rain.png', '../images/night/03-night-storm.png', '../images/night/04-night-snow.png'];\r\n\r\n    const selectWeather = (weather, id) => {\r\n        const hour = new Date();\r\n        if (weather === \"Clear\" && id === 800) {\r\n            if (hour.getHours() > 5 && hour.getHours() < 22) {\r\n                return dayImages[0];\r\n            } else {\r\n                return nightImages[0];\r\n            }\r\n        } else if (weather === \"Clouds\") {\r\n            if (id === 801) {\r\n                if (hour.getHours() > 5 && hour.getHours() < 22) {\r\n                    return dayImages[1];\r\n                } else {\r\n                    return nightImages[1];\r\n                }\r\n            } else if (id === 802) {\r\n                return statelessImages[0];\r\n            } else if (id === 803 || id === 804) {\r\n                return statelessImages[6];\r\n            }\r\n        } else if (weather === \"Rain\") {\r\n            if (id > 499 && id < 502) {\r\n                if (hour.getHours() > 5 && hour.getHours() < 22) {\r\n                    return dayImages[2];\r\n                } else {\r\n                    return nightImages[2];\r\n                }\r\n            } else {\r\n                return statelessImages[1];\r\n            }\r\n        } else if (weather === \"Snow\") {\r\n            if (id < 602) {\r\n                if (hour.getHours() > 5 && hour.getHours() < 22) {\r\n                    return dayImages[4];\r\n                } else {\r\n                    return nightImages[4];\r\n                }\r\n            } else {\r\n                return statelessImages[3];\r\n            }\r\n        } else if (weather === \"Drizzle\") {\r\n            return dayImages[2];\r\n        } else if (weather === \"Thunderstorm\") {\r\n            if (id > 210) {\r\n                if (hour.getHours() > 5 && hour.getHours() < 22) {\r\n                    return dayImages[3];\r\n                }\r\n            } else {\r\n                return statelessImages[3];\r\n            }\r\n        } else if (weather === \"Atmosphere\") {\r\n            if (id === 741 || id === 701) {\r\n                return statelessImages[4];\r\n            } else if (id === 781) {\r\n                return statelessImages[9];\r\n            } else {\r\n                return statelessImages[5];\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <img src={selectWeather(props.weather, props.weatherId)} alt={props.weather} />\r\n    );\r\n}\r\n\r\nexport default ImageSelector;","import React from 'react';\r\nimport '../styles/OverallWeather.css';\r\n\r\nimport ImageSelector from './ImageSelector';\r\n\r\nconst OverallWeather = (props) => {\r\n    // const countTime = (start, end) => {\r\n    //     const startTime = new Date(start * 1000);\r\n    //     const endTime = new Date(end * 1000);\r\n    //     return `${startTime.getHours() < 10 ? `0` + startTime.getHours() : startTime.getHours()}:00-${endTime.getHours() < 10 ? `0` + endTime.getHours() : endTime.getHours()}:00`\r\n    // }\r\n    const { currentWeather, detailedWeather, location } = props;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"section-first\">\r\n                <div className=\"section-top-left\">\r\n                    <p className=\"location\">{currentWeather.name}, {location[2]}</p>\r\n                    <p className=\"temperature\">{Math.round(currentWeather.main.temp)}°{(location[4] === \"MM\" || location[4] === \"US\" || location[4] === \"LR\" ? `F` : `C`)}</p>\r\n                </div>\r\n                <div className=\"section-top-right\">\r\n                    <ImageSelector weather={detailedWeather.daily[0].weather[0].main} weatherId={detailedWeather.daily[0].weather[0].id} />\r\n                </div>\r\n                <div className=\"section-bottom-left\">\r\n                    <p className=\"description\">{currentWeather.weather[0].main}</p>\r\n                    {/* <p className=\"alert\">{detailedWeather.alerts[0].event}: {countTime(detailedWeather.alerts[0].start, detailedWeather.alerts[0].end)}</p> */}\r\n                </div>\r\n                <div className=\"section-bottom-right\">\r\n                    <p className=\"tempMinMax\">Max. {Math.round(detailedWeather.daily[0].temp.max)}° - Min. {Math.round(detailedWeather.daily[0].temp.min)}°</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OverallWeather;","import React from 'react';\r\nimport '../styles/SimplifiedTodayWeather.css';\r\n\r\nconst SimplifiedTodayWeather = (props) => {\r\n    const { detailedWeather, currentWeather, location } = props;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"section-second\">\r\n                <div className=\"section-top\">\r\n                    <p className=\"title\">{currentWeather.name}, {location[3]} - Today's Forecast</p>\r\n                </div>\r\n                <div className=\"section-bottom\">\r\n                    <div className=\"todayWeather\">\r\n                        <div className=\"title\">\r\n                            <span>Morning</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src=\"../images/040-sunrise.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[0].temp.morn)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"todayWeather\">\r\n                        <div className=\"title\">\r\n                            <span>Midday</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src=\"../images/day/00-day-clear.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[0].temp.day)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"todayWeather\">\r\n                        <div className=\"title\">\r\n                            <span>Afternoon</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src=\"../images/041-sunset.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[0].temp.eve)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"todayWeather\">\r\n                        <div className=\"title\">\r\n                            <span>Night</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <img src=\"../images/night/00-night-clear.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[0].temp.night)}°</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimplifiedTodayWeather;","import React from 'react';\r\nimport '../styles/AdvancedTodayWeather.css';\r\n\r\nconst AdvancedWeather = (props) => {\r\n    const time = (unix) => {\r\n        const date = new Date(unix * 1000);\r\n        return `${date.getHours() < 10 ? `0` + date.getHours() : date.getHours()}:${date.getMinutes() < 10 ? `0` + date.getMinutes() : date.getMinutes()}`;\r\n    }\r\n    const { detailedWeather, currentWeather, location } = props;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"section-third\">\r\n                <div className=\"section-top\">\r\n                    <p className=\"title\">{currentWeather.name}, {location[3]} - Detailed Weather</p>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <div className=\"dayDetails\">\r\n                        <div className=\"details-left\">\r\n                            <div className=\"sunrise\">\r\n                                <img src=\"../images/040-sunrise.png\" alt=\"sunrise\" />\r\n                                <p className=\"time\">{time(currentWeather.sys.sunrise)}</p>\r\n                            </div>\r\n                            <div className=\"sunset\">\r\n                                <img src=\"../images/041-sunset.png\" alt=\"sunset\" />\r\n                                <p className=\"time\">{time(currentWeather.sys.sunset)}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"details-right\">\r\n                            <div className=\"uvScale\">\r\n                                <img src=\"../images/042-uv.png\" alt=\"uv\" />\r\n                                <p className=\"uvValue\">{detailedWeather.daily[0].uvi > 2 ? `Protection required` : `No protection required`}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"details-center\">\r\n                            <div className=\"list\">\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Wind</p>\r\n                                    <p className=\"text-right\">{(location[4] === \"MM\" || location[4] === \"US\" || location[4] === \"LR\" ? `${detailedWeather.daily[0].wind_speed} mph` : `${Math.round(detailedWeather.daily[0].wind_speed * 3.6)} km/h`)}</p>\r\n                                </div>\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Pressure</p>\r\n                                    <p className=\"text-right\">{detailedWeather.daily[0].pressure} hPA</p>\r\n                                </div>\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Index UV</p>\r\n                                    <p className=\"text-right\">{detailedWeather.daily[0].uvi}</p>\r\n                                </div>\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Clouds</p>\r\n                                    <p className=\"text-right\">{Math.round(detailedWeather.daily[0].clouds)}%</p>\r\n                                </div>\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Humidity</p>\r\n                                    <p className=\"text-right\">{Math.round(detailedWeather.daily[0].humidity)}%</p>\r\n                                </div>\r\n                                <div className=\"listItem\">\r\n                                    <p className=\"text-left\">Visibility</p>\r\n                                    <p className=\"text-right\">{(location[4] === \"MM\" || location[4] === \"US\" || location[4] === \"LR\" ? `${Math.round(currentWeather.visibility / 1.6)} mi` : `${Math.round(currentWeather.visibility / 1000)} km`)}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdvancedWeather;","import React from 'react';\r\nimport '../styles/WeatherOnNextDays.css';\r\n\r\nimport ImageSelector from './ImageSelector';\r\n\r\nconst WeatherOnNextDays = (props) => {\r\n    const countDate = (unix) => {\r\n        const date = new Date(unix * 1000)\r\n        const month = date.toString()\r\n        return `${month[0] + month[1] + month[2]}. ${date.getDate()}`;\r\n    }\r\n    const { detailedWeather, currentWeather, location } = props;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"section-fourth\">\r\n                <div className=\"section-top\">\r\n                    <p className=\"title\">{currentWeather.name}, {location[3]} - Next Days Forecast</p>\r\n                </div>\r\n                <div className=\"section-bottom\">\r\n                    <div className=\"weather\">\r\n                        <div className=\"title\">\r\n                            <span>Tomorrow</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <ImageSelector weather={detailedWeather.daily[1].weather[0].main} weatherId={detailedWeather.daily[1].weather[0].id} />\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <span>{detailedWeather.daily[1].weather[0].main}</span>\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[1].temp.day)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather\">\r\n                        <div className=\"title\">\r\n                            <span>{countDate(detailedWeather.daily[2].dt)}</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <ImageSelector weather={detailedWeather.daily[2].weather[0].main} weatherId={detailedWeather.daily[2].weather[0].id} />\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <span>{detailedWeather.daily[2].weather[0].main}</span>\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[2].temp.day)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather\">\r\n                        <div className=\"title\">\r\n                            <span>{countDate(detailedWeather.daily[3].dt)}</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <ImageSelector weather={detailedWeather.daily[3].weather[0].main} weatherId={detailedWeather.daily[3].weather[0].id} />\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <span>{detailedWeather.daily[3].weather[0].main}</span>\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[3].temp.day)}°</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather\">\r\n                        <div className=\"title\">\r\n                            <span>{countDate(detailedWeather.daily[4].dt)}</span>\r\n                        </div>\r\n                        <div className=\"image\">\r\n                            <ImageSelector weather={detailedWeather.daily[4].weather[0].main} weatherId={detailedWeather.daily[4].weather[0].id} />\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <span>{detailedWeather.daily[4].weather[0].main}</span>\r\n                        </div>\r\n                        <div className=\"temperature\">\r\n                            <span>{Math.round(detailedWeather.daily[4].temp.day)}°</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherOnNextDays;","import React from 'react';\r\nimport '../styles/Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"section-fifth\">\r\n                <p>Site powered by: <a href=\"https://ipstack.com/\">ipstack</a>, <a href=\"https://openweathermap.org/\">OpenWeather</a>, <a href=\"https://www.flaticon.com/packs/weather-161\">Flaticon</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/Container.css';\r\nimport OverallWeather from './OverallWeather';\r\nimport SimplifiedTodayWeather from './SimpifiedTodayWeather';\r\nimport AdvancedTodayWeather from './AdvancedTodayWeather';\r\nimport WeatherOnNextDays from './WeatherOnNextDays';\r\nimport Footer from './Footer';\r\n\r\nconst Container = () => {\r\n    const [place, setPlace] = useState([]);\r\n    const [currentWeather, setCurrentWeather] = useState([]);\r\n    const [detailedWeather, setDetailedWeather] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n        fetch(`http://api.ipstack.com/check?access_key=0aecc97c07665e6c46ed35e83f56d474`)\r\n            .then(result => result.json())\r\n            .then(json => {\r\n                setPlace([json.latitude, json.longitude, json.region_name, json.country_name, json.country_code])\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error \" + err);\r\n            })\r\n    }, [])\r\n    useEffect(() => {\r\n        if (place.length > 0) {\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${place[0]}&lon=${place[1]}&units=${(place[4] === \"MM\" || place[4] === \"US\" || place[4] === \"LR\" ? `imperial` : `metric`)}&appid=4bb3a96f9a8e5ae053cce296b10640ca`)\r\n                .then(result => result.json())\r\n                .then(json => {\r\n                    setCurrentWeather(json);\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Error \" + err);\r\n                })\r\n        }\r\n    }, [place])\r\n    useEffect(() => {\r\n        if (place.length > 0) {\r\n            fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${place[0]}&lon=${place[1]}&exclude=minutely&units=${(place[4] === \"MM\" || place[4] === \"US\" || place[4] === \"LR\" ? `imperial` : `metric`)}&appid=4bb3a96f9a8e5ae053cce296b10640ca`)\r\n                .then(result => result.json())\r\n                .then(json => {\r\n                    setDetailedWeather(json);\r\n                    setLoading(true);\r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Error \" + err);\r\n                })\r\n        }\r\n    }, [place])\r\n    return (\r\n        <div className=\"container\" >\r\n            {loading && (\r\n                <>\r\n                    <OverallWeather\r\n                        location={place}\r\n                        currentWeather={currentWeather}\r\n                        detailedWeather={detailedWeather}\r\n                    />\r\n                    <SimplifiedTodayWeather\r\n                        location={place}\r\n                        currentWeather={currentWeather}\r\n                        detailedWeather={detailedWeather}\r\n                    />\r\n                    <AdvancedTodayWeather\r\n                        location={place}\r\n                        currentWeather={currentWeather}\r\n                        detailedWeather={detailedWeather}\r\n                    />\r\n                    <WeatherOnNextDays\r\n                        location={place}\r\n                        currentWeather={currentWeather}\r\n                        detailedWeather={detailedWeather}\r\n                    />\r\n                    <Footer />\r\n                </>\r\n            )}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Container from './components/Container';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}